<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ARmh1/8BQI+WhrJ51iQAAAAASUVORK5CYII=
</value>
  </data>
</root>